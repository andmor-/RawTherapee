name: macOS build
on:
  push:
    branches:
      - dev
      - patch**
      - newlocallab
  pull_request:
    branches:
      - dev
      - newlocallab
  release:
    types:
      - created
  workflow_dispatch:
jobs:
  build:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: |
           date -u
           mkdir build
           date +%s > build/stamp
           brew uninstall --ignore-dependencies libtiff
           brew install gtk+3 gtkmm3 gtk-mac-integration adwaita-icon-theme libsigc++@2 little-cms2 libiptcdata fftw lensfun wget llvm cmake expat pkgconfig libomp shared-mime-info | tee -a depslog
           date -u
           echo "----====Pourage====----"
           cat depslog | grep Pouring
           zsh -c 'echo "Completed installation of dependencies in $(printf "%0.2f" $(($[$(date +%s)-$(cat build/stamp)]/$((60.))))) minutes"'
      - name: Configure build system
        env:
          CMAKE_CXX_STANDARD: 12
          PKG_CONFIG_PATH: /usr/local/opt/libtiff/lib/pkgconfig:/usr/local/opt/libffi/lib/pkgconfig:/usr/local/opt/expat/lib/pkgconfig
          LDFLAGS: -L/opt/homebrew/lib -Wl,-rpath,/opt/homebrew/lib -L/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib
          RAW_THERAPEE_MAJOR: '5'
          RAW_THERAPEE_MINOR: '8'
        run: |
          # GITHUB_REF is the ref that triggered the build, like
          # refs/heads/new-feature - the next line parses that to REF: the branch
          # name only (new-feature)
          export REF=${GITHUB_REF##*/}
          export C_FLAGS=$(echo -e $C_FLAGS | tr -d '\n')
          cd build && date -u && date +%s > configstamp
          cmake -DCMAKE_BUILD_TYPE="Release" \
                -DLOCAL_PREFIX="$(brew --prefix)" \
                -DPROC_TARGET_NUMBER="2" \
                -DCODESIGNID="Apple Development: andre@clarin.eu (LD66Z2PUV6)" \
                -DCACHE_NAME_SUFFIX="5.8-dev" \
                -DCMAKE_C_COMPILER="clang" \
                -DCMAKE_CXX_COMPILER="clang++" \
                -DWITH_LTO="ON" \
                -DCMAKE_OSX_DEPLOYMENT_TARGET="11.5" \
                ..
            zsh -c 'echo "Configured in $(printf "%0.2f" $(($[$(date +%s)-$(cat configstamp)]/$((60.))))) minutes"'
      - name: Compile RawTherapee
        run: |
          date -u && date +%s > build/compilestamp
          cd build
          export REF=${GITHUB_REF##*/}
          make -j$(sysctl -a | grep machdep.cpu.thread_count | tail -c 2) install
          zsh -c 'echo "Compiled in $(printf "%0.2f" $(($[$(date +%s)-$(cat compilestamp)]/$((60.))))) minutes"'
      - name: Create application bundle
        run: |
          zsh
          date +%s > build/bundlestamp && date -u && cd build
          export REF=${GITHUB_REF##*/} && export LOCAL_PREFIX=/usr && make macosx_bundle
          export ARTIFACT=(RawTherapee*.zip)
          echo "=== artifact: ${ARTIFACT}"
          # defining environment variables for next step as per
          # https://github.com/actions/starter-workflows/issues/68
          echo "ARTIFACT_PATH=${GITHUB_WORKSPACE}/build/${ARTIFACT}" >> $GITHUB_ENV
          echo "ARTIFACT_FILE=${ARTIFACT}" >> $GITHUB_ENV
          zsh -c 'echo "Bundled in $(printf "%0.2f" $(($[$(date +%s)-$(cat bundlestamp)]/$((60.))))) minutes"'
          exit
      - uses: actions/upload-artifact@v2
        with:
          name: ${{env.ARTIFACT_FILE}}
          path: ${{env.ARTIFACT_PATH}}
      - name: Finish build
        run: |
          date -u
          zsh -c 'echo "Build completed in $(printf "%0.2f" $(($[$(date +%s)-$(cat build/stamp)]/$((60.))))) minutes"'
